// This pipeline deploys the flask on a third app server as an 'jenkins' account.
// So, you should set up password-less ssh for 'jenkins' account of Jenkins server to 'ubuntu' account on the app server.
// TO help jenkins get the path right -> add PATH="$HOME/.local/bin:$PATH" at end of the file /etc/profile and restart the jenkins.

node {
    environment {
        dev_app_server = "192.168.0.112"
        dev_app_user = "ubuntu"
    }
    timestamps {
        ansiColor("xterm") {
            stages {
                stage('Building') {
                steps {
                        echo 'Starting build'
                        ansiColor('css') {
                            sh '''
                                sudo apt -y install python3.9
                                sudo apt -y install python3-pip
                                pip3 install --upgrade pip
                                pip3 install virtualenv
                                virtualenv -p /usr/bin/python3.9 venv
                                . venv/bin/activate
                                pip3 install -r requirements.txt
                            '''
                            echo 'Building Success'
                        }
                    }
                }
                stage('Linting and Testing') {
                    steps {
                        parallel(
                            a: {
                                echo 'Starting lint'
                                sh '''
                                . venv/bin/activate
                                pylint --output-format=parseable --fail-under=95 app/app.py --msg-template="{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}" | tee pylint.log || echo "pylint exited with $?"
                                '''
                                echo "Linting Success"
                            },
                            b: {
                                echo 'Starting test'
                                sh '''
                                . venv/bin/activate
                                pytest --cov=tests --cov-report term -vs
                                '''
                                echo "Testing Success"
                            }
                        )
                        }
                }
                stage('Deploy') {
                    steps {
                        echo 'Starting deploy to the app server'
                        sh '''
                        . venv/bin/activate
                        #sudo su - ${dev_app_user}
                        ssh  ${dev_app_user}@${dev_app_server} "mkdir -p /home/${dev_app_user}/webapp"
                        #ssh ${dev_app_user}@${dev_app_server} "install -d -m 0755 -o ${dev_app_user} -g ${dev_app_user} /home/${dev_app_user}/webapp"
                        rm -rf venv
                        echo "Env is"
                        echo "${WORKSPACE}"
                        echo "Env done"
                        scp -pr "${WORKSPACE}"/*  ${dev_app_user}@${dev_app_server}:/home/${dev_app_user}/webapp/
                        ssh  ${dev_app_user}@${dev_app_server} "cd /home/${dev_app_user}/webapp/; . /home/${dev_app_user}/.bashrc; . ./deploy.sh"
                        '''
                        echo "Deployment Success"
                    }
                }
            }
        }
    }
}
